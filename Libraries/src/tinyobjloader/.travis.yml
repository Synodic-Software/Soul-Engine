language: cpp
sudo: required
matrix:
  include:
  - addons: &1
      apt:
        sources:
        - george-edison55-precise-backports
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.7
        packages:
        - cmake
        - cmake-data
        - ninja-build
        - g++-4.9
        - clang-3.7
    compiler: clang
    env: DEPLOY_BUILD=1 COMPILER_VERSION=3.7 BUILD_TYPE=Debug
  - addons: *1
    compiler: clang
    env: COMPILER_VERSION=3.7 BUILD_TYPE=Release
  - addons: &2
      apt:
        sources:
        - george-edison55-precise-backports
        - ubuntu-toolchain-r-test
        packages:
        - cmake
        - cmake-data
        - ninja-build
        - g++-4.9
    compiler: gcc
    env: COMPILER_VERSION=4.9 BUILD_TYPE=Debug
  - addons: *2
    compiler: gcc
    env: COMPILER_VERSION=4.9 BUILD_TYPE=Release
  - addons: *1
    compiler: clang
    env: COMPILER_VERSION=3.7 BUILD_TYPE=Debug
before_install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade; fi
- if [ -n "$REPORT_COVERAGE" ]; then sudo apt-get update python; fi
- if [ -n "$REPORT_COVERAGE" ]; then sudo apt-get install python-dev libffi-dev libssl-dev; fi
- if [ -n "$REPORT_COVERAGE" ]; then sudo pip install --upgrade pip; fi
- if [ -n "$REPORT_COVERAGE" ]; then CXX=g++ pip install --user requests[security]; fi
- if [ -n "$REPORT_COVERAGE" ]; then CXX=g++ pip install --user cpp-coveralls; fi
script:
- cd tests
- make check
- if [ -n "$REPORT_COVERAGE" ]; then coveralls -b . -r .. -e examples -e tools -e
  jni -e python -e images -E ".*CompilerId.*" -E ".*feature_tests.*" ; fi
- cd ..
- rm -rf dist
- mkdir dist
- cp tiny_obj_loader.h dist/

before_deploy:
  - echo "Creating description file for bintray."
  - ./tools/travis_postbuild.sh

deploy:
  - provider: bintray
    file: ".bintray.json"
    user: "syoyo"
    key:
      secure: W4F1VZcDcVOMe8Ymvo0bHery/JSmVhadl1NgAnGus6o7zVw7ChElKA1ho/NtqUbtoW8o1qUKMJdLQeh786jolocZJEJlns9JZ5FCet6H2b3kITfUa4GR5T11V/ZYwL3SajW8vZ1xu5UrpP5HHgFMYtxb1MFrNLDI60sh0RnyV/qFFBnCJGZPagF/M1mzbJeDml5xK5lShH0r8QpH+7MeQ1J8ungEyJ7UCyr1ao8gY9eq1/05IpHR9vri/d48EXQWHbqtI8EwCc7064oCYQGyYcLsD4yPEokwrdelkCvDquSpJLmbJENfZCc4vZGXsykjnQ8+gltJomBAivQFB9vc06ETEJssMzitbrfEZUrqFwZj/HZM7CYGXfGQWltL828SppCjsuWrgQ/VYXM5UgRpmhlxbqnuyxnYvKZ9EDW4+EnMkOmIl7WSDovp8E/4CZ0ghs+YyFS4SrgeqFCXS8bvxrkDUUPSipHuGBOt02fRnccKzU+3zU6Q5fghyLczz4ZtnOdk+Niz/njyF0SZfPYTUgb3GzAJ8Su6kvWJCAGdedON3n1F/TtybCE2dIdATxaO2uFQbwYjSOCiq209oCJ7MrsQZibRsa5a9YXyjlLkPxwOeVwo8wJyJclqWswIkhdSO8xvTnkwESv4yLzLutEOlBVlQbJzpyuS6vx0yHOYkwc=
    all_branches: true
    on:
      repo: syoyo/tinyobjloader
      condition: -n "$DEPLOY_BUILD"
      tags: true
    skip_cleanup: true
  - provider: releases
    api_key:
      secure: AsXameK4GJn6h6wMmDrKTr7q/o9EI7hX7zWg1W6VaFBQKfkBvOmjJolWimjl6HMoRZ1NpMmK5GDm3zBlTUeABtgVBIyNWgE9vWS39ff6D5iQKcgScFsJkyILt0GikBqbN2pLGQ2t/M1Qh6n1sEIfzqekiCcF5Qvy5yYlYvHtaRGV02QeYAej/xx15/9SMuKTncHhjf63ClYPu8ODid7QUegJUvlQUeXoPsBDbaXMH2uDWoBWF7etX7G2Iob4NE8GX+ZP6dj+Ogi7p4HXThK650mzLL/pUl584EjjY/vePqx0cFhtpiRwvrW8SNPI1aJ1Phwa1enLRUgfS3bnkwQAMw/SCXSK2lnCvkUAXyTgpG03HWrZURj4vhEPXc7qHooO+dsfmi+JanYLaSDyrGpgQznLGjCMnVATimry0KxSufUY8Wt72Wh+nf7N0IgTUCjl32sWnQd/MRZPkxFuaf1h7r9RoH9KZY0yIOV09gABEFCGrOIZA2FcyhC2G26Bc4zyNrfMFpZ2DI76qdcWNdJGkRkpxtH9sGU8JgZu6Em2f1e6+SLgkBsPxbhRk5PwdhA9AXE2p9PmQqhO3jJKusGBZSoHAF7TlwagRY2J01yJxF7ge6zG9U8QuBqs1bB1zdnE34fHWOgs4st3inC+oBDOhvnEg1Nm/qeYVWMBzpwclSg=
    file: tiny_obj_loader.h
    all_branches: true
    on:
      repo: syoyo/tinyobjloader
      tags: true
    skip_cleanup: true
